name: Build Docker & push to Staging

on:
  workflow_call:
    inputs:
      go_version:
        required: false
        default: 1.16
        type: string
      service:
        required: true
        type: string
      env:
        required: true
        type: string
      sha:
        required: true
        type: string
      version:
        required: true
        type: string
    secrets:
      NUMARY_GITHUB_TOKEN:
        required: true

jobs:
  build:
    name: Build Docker for Staging
    permissions:
      id-token: write
      contents: write
    runs-on: ubuntu-latest
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Install Task
        uses: arduino/setup-task@v1
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: ${{ inputs.go_version }}
      - name: Configure git for private modules
        env:
          TOKEN: ${{ secrets.NUMARY_GITHUB_TOKEN }}
        run: git config --global url."https://numarybot:${TOKEN}@github.com".insteadOf "https://github.com"
      - name: "Task: Run CI"
        run: task ci
      - name: Configure AWS credentials for staging
        if: ${{ github.event.inputs.env != 'prod' }}
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: eu-west-1
          role-to-assume: arn:aws:iam::955332203423:role/github-access
          role-duration-seconds: 3600
      - name: Configure AWS credentials for production
        if: ${{ github.event.inputs.env == 'prod' }}
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: eu-west-1
          role-to-assume: arn:aws:iam::288350113309:role/github-access
          role-duration-seconds: 3600
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: "Task: Build Docker image"
        run: task build APP_SHA=${TASK_APP_SHA} APP_VERSION=${TASK_APP_VERSION} APP_SERVICE=${TASK_SERVICE}
        env:
          TASK_SERVICE: ${{ inputs.service }}
          TASK_APP_SHA: ${{ inputs.sha }}
          TASK_APP_VERSION: ${{ inputs.version }}
      - name: "Task: Push Docker image"
        run: task push-${{ inputs.env }} APP_SHA=${TASK_APP_SHA} APP_VERSION=${TASK_APP_VERSION} APP_SERVICE=${TASK_SERVICE}
        env:
          TASK_SERVICE: ${{ inputs.service }}
          TASK_APP_SHA: ${{ inputs.sha }}
          TASK_APP_VERSION: ${{ inputs.version }}